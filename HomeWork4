//First task

class Solution {
    public void reverseString(char[] s) {
         Stack<Character> string = new Stack<>();

        for(int i = 0; i < s.length; i++) {
            string.push(s[i]);
        }

        for(int i = 0; i < s.length; i++) {
            s[i] = string.pop();
        }
    }
}

//Second task
public static boolean isValid(String s) {
        if(s.isEmpty()){
            return false;
        }
        char[] string = s.toCharArray();
        Queue queue = new LinkedList();
        int i = 0;
        char[] massOfLeft = new char[]{'(','[','{'};
        char[] massOfRight = new char[]{')',']','}'};

        for(i = 0; i < string.length; i++) {
            queue.add(string[i]);
        }

        i = 0;
        int scoreOfIterator = 0;
        while (!queue.isEmpty()) {
            if(scoreOfIterator == 10){
                return false;
            }
            if(Objects.equals(queue.element(), massOfLeft[i])) {
                queue.remove();
                if (queue.isEmpty()) {
                    return false;
                }
                if(Objects.equals(queue.element(), massOfRight[i])) {
                    queue.remove();
                } else return false;
            }
            if(i == massOfLeft.length-1) {
                i = 0;
                scoreOfIterator = 0;
            } else{
                i++;
                scoreOfIterator++;
            }
        }
        return true;
    }
